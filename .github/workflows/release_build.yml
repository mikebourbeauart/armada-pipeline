name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
#    branches: ["master"]
#  pull_request:
#    branches: ["master"]

jobs:
  Windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get tag
        id: tag
        shell: bash
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: ~\AppData\Local\pip\cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: |
          pyinstaller pyinst_windows.spec --noconfirm

      - name: Zip build
        run: python zip_build.py

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
            - Third Change
          draft: false
          prerelease: false

      - name: Upload release
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./ArmadaPipeline.zip  #./my-artifact.zip
          asset_name: ArmadaPipeline.zip #my-artifact.zip
          asset_content_type: application/zip

